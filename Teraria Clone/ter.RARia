import random, sys

HEIGHT = 20
WIDTH = 500
SEALEVEL = HEIGHT * 1/2

UP = "\033[F"
CLEAR = "\033[K"

BIOMES=[
	#["P", [0, 0, 0, 0, 0]],
	["M", [-1, 0, 0, 0, 1]],
	["L", [-2, -1, 0, 1, 2]],
	["B", [-3, -2, -1, -1, 0, 0, 1, 1, 2, 3]]
	#["H", [-10, -5, 3, 5, 10]]
	]

def main():
	board = []
	for i in xrange(0, WIDTH):
		board.append([])
		for j in xrange(0, HEIGHT):
			board[i].append("")
	meta_generate_board(board, 20, 50)
	generate_minerals(board, 5, 2, ".")
	generate_minerals(board, 5, 2, "o")
	crt_horiz_print_board(board)
	
def meta_generate_board(board, num_biomes, max_biome_width):
	current_height = SEALEVEL
	currentX = 0
	for i in xrange(num_biomes):
		biome = random.choice(BIOMES)
		toX = random.randrange(0, max_biome_width) + currentX
		if toX >= WIDTH or i == num_biomes - 1:
			toX = WIDTH - 1
		current_height = generate_board(board, [currentX, toX], current_height, biome)
		currentX = toX
		if currentX >= WIDTH:
			break
	
	
def generate_board(board, brange, current_height, biome):
	for x in xrange(brange[0], brange[1]):
		d_height = random.choice(biome[1])
		if current_height + d_height > 0 and current_height + d_height <= HEIGHT - 3:
			current_height += d_height
		for y in xrange(0, current_height):
			board[x][y] = " "
		for y in xrange(current_height, HEIGHT):
			board[x][y] = biome[0]
	return current_height
			
def print_board(board):
	outp = ""
	for y in xrange(len(board[0])):
		for x in xrange(len(board)):
			outp += board[x][y]
		outp += "\n"
	print outp
	
def crt_vert_print_board(board):
	for y in xrange(len(board[0])):
		for x in xrange(len(board)):
			print board[x][y],
		print ""
		
def crt_horiz_print_board(board):
	for i in xrange(len(board[0])):
		for y in xrange(0, i):
			for x in xrange(len(board)):
				print board[x][y],
			print ""
		sys.stdout.write(UP)
		sys.stdout.write(CLEAR)
	
		
def generate_minerals(board, number, range, symbol):
	for i in xrange(number):
		x = random.randrange(0, WIDTH)
		y = HEIGHT - 1
		sentinel = 100
		while True:
			sentinel -= 1
			y = random.randrange(SEALEVEL, HEIGHT)
			if board[x][y] != " ":
				break
			if sentinel < 0:
				break
		board[x][y] = symbol
		for i in xrange(range * range):
			xdist = random.randrange(-range, range)
			ydist = random.randrange(-range, range)
			try:
				if board[x+xdist][y+ydist] != " ":
					board[x+xdist][y+ydist] = symbol
			except Exception:
				print "fuck"
				pass
		
		
main()
